--------------------------- Access Managed Opening Stock Balance & SLOBs Report --------------------
----------------------------------------- Created By Cleophas ------------------------------------------
----------------------------------------- Last Updated by Cleophas >: 2025-06-05: Updated null brands----
with
------------------------------ Manage Territory Dashboard Access from ERP ----------------------
erp_employee_list as (
                      select distinct edac.user_id,
                      edac.department,
                      edac.kyosk_business_unit,
                      territory_list
                      from `kyosk-prod.karuru_views.erp_dashboard_access_mapping` edac,unnest(new_territory_list) territory_list
                    ),
-------------------------- Data Uploads ---------------------------------------------------------
territory_mapping as (
                      select distinct original_territory_id,
                      new_territory_id as territory_id,
                      warehouse_name,
                      from `karuru_upload_tables.territory_region_mapping` 
                      ),
inventory_sku_credit_status as (
                                SELECT distinct company_id,
                                item_code, 
                                credit_status
                                FROM `kyosk-prod.karuru_upload_tables.inventory_sku_status` 
                                ),
new_categories_sku as (
                      SELECT distinct company_id,
                      --product_bundle_id,
                      --catalog_uom,
                      inventory_name,
                      inventory_uom,
                      sku_type
                      FROM `kyosk-prod.karuru_upload_tables.new_categories_sku` 
                      ),
item_group_mapping as (
                        select distinct country_code,
                        case when country_code = 'KE' then 'KYOSK DIGITAL SERVICES LTD (KE)'
                             when country_code = 'UG' then 'KYOSK DIGITAL SERVICES LIMITED (UG)'
                             when country_code = 'TZ' then 'KYOSK DIGITAL SERVICES LIMITED (TZ)'
                             when country_code = 'NG' then 'KYOSK DIGITAL SOLUTIONS NIGERIA LIMITED'
                        else null end as company,
                        item_group_id,
                        type
                        from `kyosk-prod.karuru_upload_tables.item_group_mapping` 
                        order by 1
                      ),
item_group_per_pm as (
                      select distinct item_group,
                      purchasing_manager,
                      company
                      from `kyosk-prod.karuru_upload_tables.item_group_per_pm`
                     ),
---------------------- Brand Data ----------------------------------------------
supplier_brand_mapping as (
                          select distinct supplier_name,
                          string_agg(brand,"," order by brand) as brand
                          from `karuru_upload_tables.uploaded_supplier_brand_mapping`
                          group by 1
                          ),
supplier_item_brands as (
  select * from `karuru_views.supplier_item_brands`
),
------------------------ Purchase Receipt Stock Items --------------------------
purchase_receipt as (
                      SELECT *,
                      row_number()over(partition by id order by date_modified desc) as index
                      FROM `kyosk-prod.karuru_reports.purchase_receipt` 
                      where buying_type in ('PURCHASING')
                      and workflow_state in ('COMPLETED')
                      --where date(date_created) >= '2022-02-01'
                      and date(date_created) >= date_sub(date_trunc(current_date, month), interval 2 year)
                      ),
purchase_receipt_items as (
                          select distinct date_created,
                          --cast(posting_date as date) as posting_date,
                          pr.territory_id,
                          --pr.supplier,
                          pr.supplier_name,
                          pri.item_code,
                          pri.item_group_id,
                          --pri.uom
                          from purchase_receipt pr, unnest(items) as pri
                          where index = 1 
                          ),
get_latest_purchase_receipt_details as (
                                        select distinct territory_id,
                                        item_code,
                                        last_value(supplier_name)over(partition by territory_id,item_code order by date_created ASC ROWS BETWEEN UNBOUNDED PRECEDING AND UNBOUNDED FOLLOWING) as latest_sku_territory_supplier,
                                        last_value(supplier_name)over(partition by item_code order by date_created ASC ROWS BETWEEN UNBOUNDED PRECEDING AND UNBOUNDED FOLLOWING) as latest_sku_supplier,
                                        last_value(item_group_id)over(partition by item_code order by date_created ASC ROWS BETWEEN UNBOUNDED PRECEDING AND UNBOUNDED FOLLOWING) as item_group_id
                                        from purchase_receipt_items
                                        ),
/*purchase_receipt_stock_items as (
                                  SELECT distinct territory_id, 
                                  item_code,
                                  item_last_supplier_name as supplier_name,  
                                  FROM `kyosk-prod.karuru_views.purchase_receipt_stock_items` 
                                ),*/
--------------------Stock Entry Data : To get Item Group per SKU ----------------------------------------------
stock_entry_item_group as (
                            select distinct item_code,
                            item_group_id,
                            company_id
                            from `kyosk-prod.karuru_scheduled_queries.stock_entry_item_to_item_group_mapping`
                          ),
---------------------- Items Data ----------------------------------
items_with_index as (
                    select *,
                    row_number()over(partition by id order by modified desc) as index 
                    from `kyosk-prod.karuru_reports.item` 
                    where date(creation) >= '2018-01-01'
                    --and disabled = false
                    ),
items_data as (
              select distinct item_code,
              item_group_id,
              company_id
              from items_with_index iwi
              where index = 1
              --and iwi.maintain_stock = true
              ),
--------------------Demand Plan Data : To get Weekly Demand per SKU ---------------------------------------------
/*demand_plan as (
                select distinct demand_plan_start_date,
                demand_plan_end_date,
                territory_id,
                dp.stock_item_id,
                item_group_id,
                dp.uom,
                dp.weekly_demand_qty
                from `karuru_scheduled_queries.demand_plan` dp
                ),*/
--------------------Demand Plan Data : To get Weekly Demand per SKU ---------------------------------------------
demand_plan as (
                select distinct start_date as demand_plan_start_date,
                end_date as demand_plan_end_date,
                territory_id,
                dp.stock_item_id,
                item_group_id,
                dp.stock_uom as uom,
                dp.weekly_demand_qty,
                dp.daily_demand_qty
                from `karuru_scheduled_queries.updated_demand_plan` dp
                ),
opening_stock_balance_report as (
                                SELECT distinct osbr.opening_balance_date,
                                osbr.opening_balance_day,
                                date_trunc(osbr.opening_balance_date,week(MONDAY)) AS opening_balance_week,
                                date_sub(date_trunc(osbr.opening_balance_date,week(monday)), interval 4 week) as demand_plan_start_date,
                                date_sub(date_trunc(osbr.opening_balance_date,week(monday)), interval 1 day)  as demand_plan_end_date,
                                osbr.company_id,
                                --osbr.warehouse,
                                case when osbr.opening_balance_date >= '2024-07-08' 
                                and osbr.warehouse in ("Juja Main - KDKE","Karatina Main - KDKE","Meru Main - KDKE","Eldoret Main - KDKE","Kisii Main - KDKE","Ruai Main - KDKE","Kawangware Main - KDKE","Ongata Rongai Main - KDKE",
                                "Themi Main Warehouse - KDTZ","Ilorin Main Warehouse - KDNG","Surulere Main Warehouse - KDNG","Benin- Sapele Main - KDNG","Kano-Sabongari Main - KDNG","PortHarcourt-Obiakpor Main - KDNG") 
                                then null else osbr.warehouse end as warehouse,
                                tm.territory_id,
                                tm.original_territory_id,
                                osbr.name,
                                --seig.item_group_id,
                                id.item_group_id,
                                osbr.item_code,
                                osbr.item_code as item_name,
                                osbr.stock_uom,
                                osbr.qty_after_transaction,
                                round(osbr.valuation_rate) as valuation_rate,
                                round(osbr.stock_value) as stock_value,
                                osbr.avg_age,
                                case when osbr.avg_age between 0 and 7 then '0-7 Days'
                                   when osbr.avg_age between 8 and 14 then '8-14 Days'
                                   when osbr.avg_age between 15 and 30 then '15-30 Days'
                                   when osbr.avg_age between 31 and 60 then '31-60 Days'
                                   when osbr.avg_age between 61 and 90 then '61-90 Days'
                                   when osbr.avg_age > 90 then '90+ Days'
                                else null end as aging_bracket,
                                --prsi.supplier_name,
                                coalesce(glprd.latest_sku_territory_supplier, glprd.latest_sku_supplier)  as supplier_name,
                                FROM `kyosk-prod.karuru_scheduled_queries.opening_stock_balance`  osbr
                                left join territory_mapping tm on osbr.warehouse = tm.warehouse_name
                                --left join stock_entry_item_group seig on osbr.item_code = seig.item_code and osbr.company_id = seig.company_id
                                left join items_data id on osbr.item_code = id.item_code and osbr.company_id = id.company_id
                                --left join purchase_receipt_stock_items prsi on tm.original_territory_id = prsi.territory_id and osbr.item_code = prsi.item_code
                                left join get_latest_purchase_receipt_details glprd on tm.original_territory_id =  glprd.territory_id and osbr.item_code = glprd.item_code
                                WHERE osbr.opening_balance_date >= date_sub(date_trunc(current_date, month), interval 2 month)
                                ),
stock_balance_with_demand_plan as (
                                    select osbr.*except(original_territory_id),
                                    dp.weekly_demand_qty,
                                    --sbm.brand,
                                    coalesce(sbm.brand, sib.brand) as brand,
                                    igm.type as item_group_type,
                                    igpp.purchasing_manager,
                                    --round(safe_divide(osbr.qty_after_transaction , dp.weekly_demand_qty) * 6,0) as stock_cover_days,
                                    ceil(safe_divide(coalesce(osbr.qty_after_transaction,0) ,coalesce(nullif(avg(dp.daily_demand_qty), 0), 1))) as stock_cover_days,

                                    eel.user_id,
                                    eel.territory_list
                                    from opening_stock_balance_report osbr
                                    left join demand_plan dp on osbr.original_territory_id = dp.territory_id and osbr.item_code = dp.stock_item_id and osbr.stock_uom = dp.uom and osbr.item_group_id = dp.item_group_id
                                    and osbr.demand_plan_start_date = dp.demand_plan_start_date and osbr.demand_plan_end_date = dp.demand_plan_end_date
                                    left join item_group_mapping igm on osbr.item_group_id = igm.item_group_id and osbr.company_id = igm.company
                                    left join item_group_per_pm igpp on osbr.item_group_id = igpp.item_group and osbr.company_id = igpp.company
                                    left join supplier_brand_mapping sbm on osbr.supplier_name = sbm.supplier_name
                                    left join supplier_item_brands sib on osbr.item_code = sib.item_code and osbr.supplier_name = sib.supplier
                                    left join erp_employee_list eel on osbr.original_territory_id = eel.territory_list
                                    where REGEXP_CONTAINS(eel.user_id, @DS_USER_EMAIL)
                                    group by 1,2,3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19,20,21,22,23,25,26
                                    ),
calculate_slobs as (
                    select sbwdp.*,
                    round(safe_divide(stock_value , stock_cover_days) * 4,0) as min_stock_value,
                    round(safe_divide(stock_value, stock_cover_days) * 5,0) as re_order_point_value,
                    round(safe_divide(stock_value , stock_cover_days) * 7,0) as max_stock_value_7_day,
                    round(safe_divide(stock_value , stock_cover_days) * 14,0) as max_stock_value_14_day,
                    round(stock_value - (safe_divide(stock_value , stock_cover_days) * 7),0) as slobs_7_day,
                    round(stock_value - (safe_divide(stock_value , stock_cover_days) * 14), 0) as slobs_14_day
                    from stock_balance_with_demand_plan sbwdp
                    where territory_id is not null
                    and warehouse not in ('Thika Rd Main - KDKE','Mtwapa Mombasa Main - KDKE','Mukono Main - KDUG','Athi River Main - KDKE','Nassarawa-Karu Main Warehouse - KDNG','Kano-Zoo Main - KDNG','Vingunguti Main Warehouse - KDTZ','Nakuru Main - KDKE')
                    ),
get_sku_type_and_credit_status as (
                                    select cs.*,
                                    coalesce(ncs.sku_type, "GENERAL CATEGORY") as sku_type,
                                    coalesce(iscs.credit_status, 'UNSET') AS credit_status
                                    from calculate_slobs cs
                                    left join new_categories_sku ncs on cs.company_id = ncs.company_id and cs.item_code = ncs.inventory_name and cs.stock_uom = ncs.inventory_uom
                                    left join inventory_sku_credit_status iscs on cs.company_id = iscs.company_id and cs.item_code = iscs.item_code
                                    ),
slobs_report as (
                  select cs.*except(slobs_7_day,slobs_14_day),
                  case 
                    when (company_id = 'KYOSK DIGITAL SERVICES LIMITED (UG)' and  credit_status in ('MOQ', 'Consignment Stock')) then 0
                    --when (company_id = 'KYOSK DIGITAL SERVICES LTD (KE)' and sku_type = 'NEW CATEGORY') then 0
                    when (slobs_7_day < 0) then 0 
                    when avg_age <= 7 then 0
                    when weekly_demand_qty is null and avg_age > 7 then stock_value
                  else slobs_7_day end as slobs_7_day,
                  case 
                    when (company_id = 'KYOSK DIGITAL SERVICES LIMITED (UG)' and  credit_status in (/*'MOQ', */'Consignment Stock')) then 0
                    when (slobs_14_day < 0) then 0 
                    when avg_age <= 7 then 0
                    when weekly_demand_qty is null and avg_age > 7 then stock_value
                  else slobs_14_day end as slobs_14_day
                  from get_sku_type_and_credit_status cs
                  )
select *,
sum(stock_value)over(partition by warehouse order by stock_value ROWS BETWEEN UNBOUNDED PRECEDING AND UNBOUNDED FOLLOWING) as stock_value_by_warehouse
from slobs_report
--where territory_id not in ('Nakuru', 'Athi River','Vingunguti')
--where warehouse not in ('Mukono Main - KDUG','Athi River Main - KDKE','Nassarawa-Karu Main Warehouse - KDNG','Kano-Zoo Main - KDNG','Vingunguti Main Warehouse - KDTZ','Nakuru Main - KDKE')
--and opening_balance_date = '2024-10-22'  and item_code = 'Hit A4 Exercise Books 48 Pages Square Line' and territory_id = 'Kiambu'
--where opening_balance_date = '2024-07-03'
--and company_id = 'KYOSK DIGITAL SERVICES LTD (KE)'
--and company_id = 'KYOSK DIGITAL SERVICES LIMITED (UG)'
--and item_code = 'Sunveat Koko Coffee Kumi  Biscuits 40g'
--and item_code = 'Postman Cooking Oil 20L'
where FORMAT_DATE('%Y%m%d', opening_balance_date) between @DS_START_DATE and @DS_END_DATE
--and territory_id = 'Mombasa'
--and item_code = 'Mt. Kenya Milk FINO 500ML'
--and opening_balance_date = '2025-05-05'
